/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      Student: StudentObject
      SocialAssistant: SocialAssistantObject
      Presence: PresenceObject
      Batch: BatchObject
      StudentConnection: StudentConnectionObject
      PageInfo: PageInfoObject
      StudentEdge: StudentEdgeObject
      AggregateStudent: AggregateStudentObject
      SocialAssistantConnection: SocialAssistantConnectionObject
      SocialAssistantEdge: SocialAssistantEdgeObject
      AggregateSocialAssistant: AggregateSocialAssistantObject
      BatchConnection: BatchConnectionObject
      BatchEdge: BatchEdgeObject
      AggregateBatch: AggregateBatchObject
      PresenceConnection: PresenceConnectionObject
      PresenceEdge: PresenceEdgeObject
      AggregatePresence: AggregatePresenceObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      StudentSubscriptionPayload: StudentSubscriptionPayloadObject
      StudentPreviousValues: StudentPreviousValuesObject
      SocialAssistantSubscriptionPayload: SocialAssistantSubscriptionPayloadObject
      SocialAssistantPreviousValues: SocialAssistantPreviousValuesObject
      BatchSubscriptionPayload: BatchSubscriptionPayloadObject
      BatchPreviousValues: BatchPreviousValuesObject
      PresenceSubscriptionPayload: PresenceSubscriptionPayloadObject
      PresencePreviousValues: PresencePreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      Student: StudentFieldDetails
      SocialAssistant: SocialAssistantFieldDetails
      Presence: PresenceFieldDetails
      Batch: BatchFieldDetails
      StudentConnection: StudentConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      StudentEdge: StudentEdgeFieldDetails
      AggregateStudent: AggregateStudentFieldDetails
      SocialAssistantConnection: SocialAssistantConnectionFieldDetails
      SocialAssistantEdge: SocialAssistantEdgeFieldDetails
      AggregateSocialAssistant: AggregateSocialAssistantFieldDetails
      BatchConnection: BatchConnectionFieldDetails
      BatchEdge: BatchEdgeFieldDetails
      AggregateBatch: AggregateBatchFieldDetails
      PresenceConnection: PresenceConnectionFieldDetails
      PresenceEdge: PresenceEdgeFieldDetails
      AggregatePresence: AggregatePresenceFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      StudentSubscriptionPayload: StudentSubscriptionPayloadFieldDetails
      StudentPreviousValues: StudentPreviousValuesFieldDetails
      SocialAssistantSubscriptionPayload: SocialAssistantSubscriptionPayloadFieldDetails
      SocialAssistantPreviousValues: SocialAssistantPreviousValuesFieldDetails
      BatchSubscriptionPayload: BatchSubscriptionPayloadFieldDetails
      BatchPreviousValues: BatchPreviousValuesFieldDetails
      PresenceSubscriptionPayload: PresenceSubscriptionPayloadFieldDetails
      PresencePreviousValues: PresencePreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      StudentWhereUniqueInput: StudentWhereUniqueInputInputObject
      PresenceWhereInput: PresenceWhereInputInputObject
      StudentWhereInput: StudentWhereInputInputObject
      SocialAssistantWhereInput: SocialAssistantWhereInputInputObject
      BatchWhereInput: BatchWhereInputInputObject
      SocialAssistantWhereUniqueInput: SocialAssistantWhereUniqueInputInputObject
      BatchWhereUniqueInput: BatchWhereUniqueInputInputObject
      PresenceWhereUniqueInput: PresenceWhereUniqueInputInputObject
      StudentCreateInput: StudentCreateInputInputObject
      SocialAssistantCreateOneInput: SocialAssistantCreateOneInputInputObject
      SocialAssistantCreateInput: SocialAssistantCreateInputInputObject
      PresenceCreateManyWithoutStudentInput: PresenceCreateManyWithoutStudentInputInputObject
      PresenceCreateWithoutStudentInput: PresenceCreateWithoutStudentInputInputObject
      BatchCreateOneInput: BatchCreateOneInputInputObject
      BatchCreateInput: BatchCreateInputInputObject
      StudentUpdateInput: StudentUpdateInputInputObject
      SocialAssistantUpdateOneInput: SocialAssistantUpdateOneInputInputObject
      SocialAssistantUpdateDataInput: SocialAssistantUpdateDataInputInputObject
      SocialAssistantUpsertNestedInput: SocialAssistantUpsertNestedInputInputObject
      PresenceUpdateManyWithoutStudentInput: PresenceUpdateManyWithoutStudentInputInputObject
      PresenceUpdateWithWhereUniqueWithoutStudentInput: PresenceUpdateWithWhereUniqueWithoutStudentInputInputObject
      PresenceUpdateWithoutStudentDataInput: PresenceUpdateWithoutStudentDataInputInputObject
      PresenceUpsertWithWhereUniqueWithoutStudentInput: PresenceUpsertWithWhereUniqueWithoutStudentInputInputObject
      PresenceScalarWhereInput: PresenceScalarWhereInputInputObject
      PresenceUpdateManyWithWhereNestedInput: PresenceUpdateManyWithWhereNestedInputInputObject
      PresenceUpdateManyDataInput: PresenceUpdateManyDataInputInputObject
      BatchUpdateOneRequiredInput: BatchUpdateOneRequiredInputInputObject
      BatchUpdateDataInput: BatchUpdateDataInputInputObject
      BatchUpsertNestedInput: BatchUpsertNestedInputInputObject
      StudentUpdateManyMutationInput: StudentUpdateManyMutationInputInputObject
      SocialAssistantUpdateInput: SocialAssistantUpdateInputInputObject
      SocialAssistantUpdateManyMutationInput: SocialAssistantUpdateManyMutationInputInputObject
      BatchUpdateInput: BatchUpdateInputInputObject
      BatchUpdateManyMutationInput: BatchUpdateManyMutationInputInputObject
      PresenceCreateInput: PresenceCreateInputInputObject
      StudentCreateOneWithoutPresencesInput: StudentCreateOneWithoutPresencesInputInputObject
      StudentCreateWithoutPresencesInput: StudentCreateWithoutPresencesInputInputObject
      PresenceUpdateInput: PresenceUpdateInputInputObject
      StudentUpdateOneRequiredWithoutPresencesInput: StudentUpdateOneRequiredWithoutPresencesInputInputObject
      StudentUpdateWithoutPresencesDataInput: StudentUpdateWithoutPresencesDataInputInputObject
      StudentUpsertWithoutPresencesInput: StudentUpsertWithoutPresencesInputInputObject
      PresenceUpdateManyMutationInput: PresenceUpdateManyMutationInputInputObject
      StudentSubscriptionWhereInput: StudentSubscriptionWhereInputInputObject
      SocialAssistantSubscriptionWhereInput: SocialAssistantSubscriptionWhereInputInputObject
      BatchSubscriptionWhereInput: BatchSubscriptionWhereInputInputObject
      PresenceSubscriptionWhereInput: PresenceSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    Sexe: SexeValues,
    FinancialParticipation: FinancialParticipationValues,
    PresenceOrderByInput: PresenceOrderByInputValues,
    StudentOrderByInput: StudentOrderByInputValues,
    SocialAssistantOrderByInput: SocialAssistantOrderByInputValues,
    BatchOrderByInput: BatchOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'student', args?: QueryStudentArgs[] | false, alias?: string  } 
  | { name: 'students', args?: QueryStudentsArgs[] | false, alias?: string  } 
  | { name: 'studentsConnection', args?: QueryStudentsConnectionArgs[] | false, alias?: string  } 
  | { name: 'socialAssistant', args?: QuerySocialAssistantArgs[] | false, alias?: string  } 
  | { name: 'socialAssistants', args?: QuerySocialAssistantsArgs[] | false, alias?: string  } 
  | { name: 'socialAssistantsConnection', args?: QuerySocialAssistantsConnectionArgs[] | false, alias?: string  } 
  | { name: 'batch', args?: QueryBatchArgs[] | false, alias?: string  } 
  | { name: 'batches', args?: QueryBatchesArgs[] | false, alias?: string  } 
  | { name: 'batchesConnection', args?: QueryBatchesConnectionArgs[] | false, alias?: string  } 
  | { name: 'presence', args?: QueryPresenceArgs[] | false, alias?: string  } 
  | { name: 'presences', args?: QueryPresencesArgs[] | false, alias?: string  } 
  | { name: 'presencesConnection', args?: QueryPresencesConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'student'
  | 'students'
  | 'studentsConnection'
  | 'socialAssistant'
  | 'socialAssistants'
  | 'socialAssistantsConnection'
  | 'batch'
  | 'batches'
  | 'batchesConnection'
  | 'presence'
  | 'presences'
  | 'presencesConnection'


type QueryStudentArgs =
  | 'where'
type QueryStudentsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryStudentsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySocialAssistantArgs =
  | 'where'
type QuerySocialAssistantsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QuerySocialAssistantsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryBatchArgs =
  | 'where'
type QueryBatchesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryBatchesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPresenceArgs =
  | 'where'
type QueryPresencesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPresencesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  student: {
    type: 'Student'
    args: Record<QueryStudentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: StudentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Student | null> | prisma.Student | null
  }
  students: {
    type: 'Student'
    args: Record<QueryStudentsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: StudentWhereInput | null, orderBy?: prisma.StudentOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Student[]> | prisma.Student[]
  }
  studentsConnection: {
    type: 'StudentConnection'
    args: Record<QueryStudentsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: StudentWhereInput | null, orderBy?: prisma.StudentOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.StudentConnection> | prisma.StudentConnection
  }
  socialAssistant: {
    type: 'SocialAssistant'
    args: Record<QuerySocialAssistantArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: SocialAssistantWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SocialAssistant | null> | prisma.SocialAssistant | null
  }
  socialAssistants: {
    type: 'SocialAssistant'
    args: Record<QuerySocialAssistantsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SocialAssistantWhereInput | null, orderBy?: prisma.SocialAssistantOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SocialAssistant[]> | prisma.SocialAssistant[]
  }
  socialAssistantsConnection: {
    type: 'SocialAssistantConnection'
    args: Record<QuerySocialAssistantsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: SocialAssistantWhereInput | null, orderBy?: prisma.SocialAssistantOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SocialAssistantConnection> | prisma.SocialAssistantConnection
  }
  batch: {
    type: 'Batch'
    args: Record<QueryBatchArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: BatchWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Batch | null> | prisma.Batch | null
  }
  batches: {
    type: 'Batch'
    args: Record<QueryBatchesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: BatchWhereInput | null, orderBy?: prisma.BatchOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Batch[]> | prisma.Batch[]
  }
  batchesConnection: {
    type: 'BatchConnection'
    args: Record<QueryBatchesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: BatchWhereInput | null, orderBy?: prisma.BatchOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchConnection> | prisma.BatchConnection
  }
  presence: {
    type: 'Presence'
    args: Record<QueryPresenceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: PresenceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Presence | null> | prisma.Presence | null
  }
  presences: {
    type: 'Presence'
    args: Record<QueryPresencesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PresenceWhereInput | null, orderBy?: prisma.PresenceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Presence[]> | prisma.Presence[]
  }
  presencesConnection: {
    type: 'PresenceConnection'
    args: Record<QueryPresencesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PresenceWhereInput | null, orderBy?: prisma.PresenceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PresenceConnection> | prisma.PresenceConnection
  }
}
  

// Types for Student

type StudentObject =
  | StudentFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'firstName', args?: [] | false, alias?: string  } 
  | { name: 'lastName', args?: [] | false, alias?: string  } 
  | { name: 'sexe', args?: [] | false, alias?: string  } 
  | { name: 'privateEmail', args?: [] | false, alias?: string  } 
  | { name: 'pocoEmail', args?: [] | false, alias?: string  } 
  | { name: 'residencePermit', args?: [] | false, alias?: string  } 
  | { name: 'birthday', args?: [] | false, alias?: string  } 
  | { name: 'nationality', args?: [] | false, alias?: string  } 
  | { name: 'addressStreet', args?: [] | false, alias?: string  } 
  | { name: 'addressCity', args?: [] | false, alias?: string  } 
  | { name: 'addressNPA', args?: [] | false, alias?: string  } 
  | { name: 'addressCanton', args?: [] | false, alias?: string  } 
  | { name: 'organisation', args?: [] | false, alias?: string  } 
  | { name: 'socialAssistant', args?: [] | false, alias?: string  } 
  | { name: 'financialParticipation', args?: [] | false, alias?: string  } 
  | { name: 'financialParticipationComment', args?: [] | false, alias?: string  } 
  | { name: 'borrowLaptops', args?: [] | false, alias?: string  } 
  | { name: 'foodCost', args?: [] | false, alias?: string  } 
  | { name: 'presences', args?: StudentPresencesArgs[] | false, alias?: string  } 
  | { name: 'batch', args?: [] | false, alias?: string  } 

type StudentFields =
  | 'id'
  | 'firstName'
  | 'lastName'
  | 'sexe'
  | 'privateEmail'
  | 'pocoEmail'
  | 'residencePermit'
  | 'birthday'
  | 'nationality'
  | 'addressStreet'
  | 'addressCity'
  | 'addressNPA'
  | 'addressCanton'
  | 'organisation'
  | 'socialAssistant'
  | 'financialParticipation'
  | 'financialParticipationComment'
  | 'borrowLaptops'
  | 'foodCost'
  | 'presences'
  | 'batch'


type StudentPresencesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface StudentFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  firstName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  sexe: {
    type: 'Sexe'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Student">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Sexe> | prisma.Sexe
  }
  privateEmail: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  pocoEmail: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  residencePermit: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  birthday: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  nationality: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  addressStreet: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  addressCity: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  addressNPA: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  addressCanton: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  organisation: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  socialAssistant: {
    type: 'SocialAssistant'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Student">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SocialAssistant | null> | prisma.SocialAssistant | null
  }
  financialParticipation: {
    type: 'FinancialParticipation'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Student">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.FinancialParticipation> | prisma.FinancialParticipation
  }
  financialParticipationComment: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  borrowLaptops: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  foodCost: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  presences: {
    type: 'Presence'
    args: Record<StudentPresencesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Student">,
      args: { where?: PresenceWhereInput | null, orderBy?: prisma.PresenceOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Presence[]> | prisma.Presence[]
  }
  batch: {
    type: 'Batch'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Student">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Batch> | prisma.Batch
  }
}
  

// Types for SocialAssistant

type SocialAssistantObject =
  | SocialAssistantFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'firstName', args?: [] | false, alias?: string  } 
  | { name: 'lastName', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 

type SocialAssistantFields =
  | 'id'
  | 'firstName'
  | 'lastName'
  | 'phone'
  | 'email'



  

export interface SocialAssistantFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  firstName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Presence

type PresenceObject =
  | PresenceFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'dateStart', args?: [] | false, alias?: string  } 
  | { name: 'dateEnd', args?: [] | false, alias?: string  } 
  | { name: 'goodExcuse', args?: [] | false, alias?: string  } 
  | { name: 'reason', args?: [] | false, alias?: string  } 
  | { name: 'student', args?: [] | false, alias?: string  } 

type PresenceFields =
  | 'id'
  | 'dateStart'
  | 'dateEnd'
  | 'goodExcuse'
  | 'reason'
  | 'student'



  

export interface PresenceFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dateStart: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dateEnd: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  goodExcuse: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  reason: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  student: {
    type: 'Student'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Presence">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Student> | prisma.Student
  }
}
  

// Types for Batch

type BatchObject =
  | BatchFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'startingTime', args?: [] | false, alias?: string  } 
  | { name: 'endTime', args?: [] | false, alias?: string  } 

type BatchFields =
  | 'id'
  | 'name'
  | 'startingTime'
  | 'endTime'



  

export interface BatchFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startingTime: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  endTime: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for StudentConnection

type StudentConnectionObject =
  | StudentConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type StudentConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface StudentConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"StudentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'StudentEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"StudentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.StudentEdge[]> | prisma.StudentEdge[]
  }
  aggregate: {
    type: 'AggregateStudent'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"StudentConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateStudent> | prisma.AggregateStudent
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for StudentEdge

type StudentEdgeObject =
  | StudentEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type StudentEdgeFields =
  | 'node'
  | 'cursor'



  

export interface StudentEdgeFieldDetails {
  node: {
    type: 'Student'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"StudentEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Student> | prisma.Student
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateStudent

type AggregateStudentObject =
  | AggregateStudentFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateStudentFields =
  | 'count'



  

export interface AggregateStudentFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for SocialAssistantConnection

type SocialAssistantConnectionObject =
  | SocialAssistantConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type SocialAssistantConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface SocialAssistantConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SocialAssistantConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'SocialAssistantEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"SocialAssistantConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SocialAssistantEdge[]> | prisma.SocialAssistantEdge[]
  }
  aggregate: {
    type: 'AggregateSocialAssistant'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SocialAssistantConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateSocialAssistant> | prisma.AggregateSocialAssistant
  }
}
  

// Types for SocialAssistantEdge

type SocialAssistantEdgeObject =
  | SocialAssistantEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type SocialAssistantEdgeFields =
  | 'node'
  | 'cursor'



  

export interface SocialAssistantEdgeFieldDetails {
  node: {
    type: 'SocialAssistant'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SocialAssistantEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SocialAssistant> | prisma.SocialAssistant
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateSocialAssistant

type AggregateSocialAssistantObject =
  | AggregateSocialAssistantFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateSocialAssistantFields =
  | 'count'



  

export interface AggregateSocialAssistantFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for BatchConnection

type BatchConnectionObject =
  | BatchConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type BatchConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface BatchConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BatchConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'BatchEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"BatchConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchEdge[]> | prisma.BatchEdge[]
  }
  aggregate: {
    type: 'AggregateBatch'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BatchConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateBatch> | prisma.AggregateBatch
  }
}
  

// Types for BatchEdge

type BatchEdgeObject =
  | BatchEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type BatchEdgeFields =
  | 'node'
  | 'cursor'



  

export interface BatchEdgeFieldDetails {
  node: {
    type: 'Batch'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BatchEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Batch> | prisma.Batch
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateBatch

type AggregateBatchObject =
  | AggregateBatchFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateBatchFields =
  | 'count'



  

export interface AggregateBatchFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PresenceConnection

type PresenceConnectionObject =
  | PresenceConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type PresenceConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface PresenceConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PresenceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'PresenceEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PresenceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PresenceEdge[]> | prisma.PresenceEdge[]
  }
  aggregate: {
    type: 'AggregatePresence'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PresenceConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePresence> | prisma.AggregatePresence
  }
}
  

// Types for PresenceEdge

type PresenceEdgeObject =
  | PresenceEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type PresenceEdgeFields =
  | 'node'
  | 'cursor'



  

export interface PresenceEdgeFieldDetails {
  node: {
    type: 'Presence'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PresenceEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Presence> | prisma.Presence
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatePresence

type AggregatePresenceObject =
  | AggregatePresenceFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatePresenceFields =
  | 'count'



  

export interface AggregatePresenceFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createStudent', args?: MutationCreateStudentArgs[] | false, alias?: string  } 
  | { name: 'updateStudent', args?: MutationUpdateStudentArgs[] | false, alias?: string  } 
  | { name: 'updateManyStudents', args?: MutationUpdateManyStudentsArgs[] | false, alias?: string  } 
  | { name: 'upsertStudent', args?: MutationUpsertStudentArgs[] | false, alias?: string  } 
  | { name: 'deleteStudent', args?: MutationDeleteStudentArgs[] | false, alias?: string  } 
  | { name: 'deleteManyStudents', args?: MutationDeleteManyStudentsArgs[] | false, alias?: string  } 
  | { name: 'createSocialAssistant', args?: MutationCreateSocialAssistantArgs[] | false, alias?: string  } 
  | { name: 'updateSocialAssistant', args?: MutationUpdateSocialAssistantArgs[] | false, alias?: string  } 
  | { name: 'updateManySocialAssistants', args?: MutationUpdateManySocialAssistantsArgs[] | false, alias?: string  } 
  | { name: 'upsertSocialAssistant', args?: MutationUpsertSocialAssistantArgs[] | false, alias?: string  } 
  | { name: 'deleteSocialAssistant', args?: MutationDeleteSocialAssistantArgs[] | false, alias?: string  } 
  | { name: 'deleteManySocialAssistants', args?: MutationDeleteManySocialAssistantsArgs[] | false, alias?: string  } 
  | { name: 'createBatch', args?: MutationCreateBatchArgs[] | false, alias?: string  } 
  | { name: 'updateBatch', args?: MutationUpdateBatchArgs[] | false, alias?: string  } 
  | { name: 'updateManyBatches', args?: MutationUpdateManyBatchesArgs[] | false, alias?: string  } 
  | { name: 'upsertBatch', args?: MutationUpsertBatchArgs[] | false, alias?: string  } 
  | { name: 'deleteBatch', args?: MutationDeleteBatchArgs[] | false, alias?: string  } 
  | { name: 'deleteManyBatches', args?: MutationDeleteManyBatchesArgs[] | false, alias?: string  } 
  | { name: 'createPresence', args?: MutationCreatePresenceArgs[] | false, alias?: string  } 
  | { name: 'updatePresence', args?: MutationUpdatePresenceArgs[] | false, alias?: string  } 
  | { name: 'updateManyPresences', args?: MutationUpdateManyPresencesArgs[] | false, alias?: string  } 
  | { name: 'upsertPresence', args?: MutationUpsertPresenceArgs[] | false, alias?: string  } 
  | { name: 'deletePresence', args?: MutationDeletePresenceArgs[] | false, alias?: string  } 
  | { name: 'deleteManyPresences', args?: MutationDeleteManyPresencesArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createStudent'
  | 'updateStudent'
  | 'updateManyStudents'
  | 'upsertStudent'
  | 'deleteStudent'
  | 'deleteManyStudents'
  | 'createSocialAssistant'
  | 'updateSocialAssistant'
  | 'updateManySocialAssistants'
  | 'upsertSocialAssistant'
  | 'deleteSocialAssistant'
  | 'deleteManySocialAssistants'
  | 'createBatch'
  | 'updateBatch'
  | 'updateManyBatches'
  | 'upsertBatch'
  | 'deleteBatch'
  | 'deleteManyBatches'
  | 'createPresence'
  | 'updatePresence'
  | 'updateManyPresences'
  | 'upsertPresence'
  | 'deletePresence'
  | 'deleteManyPresences'


type MutationCreateStudentArgs =
  | 'data'
type MutationUpdateStudentArgs =
  | 'data'
  | 'where'
type MutationUpdateManyStudentsArgs =
  | 'data'
  | 'where'
type MutationUpsertStudentArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteStudentArgs =
  | 'where'
type MutationDeleteManyStudentsArgs =
  | 'where'
type MutationCreateSocialAssistantArgs =
  | 'data'
type MutationUpdateSocialAssistantArgs =
  | 'data'
  | 'where'
type MutationUpdateManySocialAssistantsArgs =
  | 'data'
  | 'where'
type MutationUpsertSocialAssistantArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteSocialAssistantArgs =
  | 'where'
type MutationDeleteManySocialAssistantsArgs =
  | 'where'
type MutationCreateBatchArgs =
  | 'data'
type MutationUpdateBatchArgs =
  | 'data'
  | 'where'
type MutationUpdateManyBatchesArgs =
  | 'data'
  | 'where'
type MutationUpsertBatchArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteBatchArgs =
  | 'where'
type MutationDeleteManyBatchesArgs =
  | 'where'
type MutationCreatePresenceArgs =
  | 'data'
type MutationUpdatePresenceArgs =
  | 'data'
  | 'where'
type MutationUpdateManyPresencesArgs =
  | 'data'
  | 'where'
type MutationUpsertPresenceArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletePresenceArgs =
  | 'where'
type MutationDeleteManyPresencesArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createStudent: {
    type: 'Student'
    args: Record<MutationCreateStudentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: StudentCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Student> | prisma.Student
  }
  updateStudent: {
    type: 'Student'
    args: Record<MutationUpdateStudentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: StudentUpdateInput, where: StudentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Student | null> | prisma.Student | null
  }
  updateManyStudents: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyStudentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: StudentUpdateManyMutationInput, where?: StudentWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertStudent: {
    type: 'Student'
    args: Record<MutationUpsertStudentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: StudentWhereUniqueInput, create: StudentCreateInput, update: StudentUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Student> | prisma.Student
  }
  deleteStudent: {
    type: 'Student'
    args: Record<MutationDeleteStudentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: StudentWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Student | null> | prisma.Student | null
  }
  deleteManyStudents: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyStudentsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: StudentWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createSocialAssistant: {
    type: 'SocialAssistant'
    args: Record<MutationCreateSocialAssistantArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SocialAssistantCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SocialAssistant> | prisma.SocialAssistant
  }
  updateSocialAssistant: {
    type: 'SocialAssistant'
    args: Record<MutationUpdateSocialAssistantArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SocialAssistantUpdateInput, where: SocialAssistantWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SocialAssistant | null> | prisma.SocialAssistant | null
  }
  updateManySocialAssistants: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManySocialAssistantsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: SocialAssistantUpdateManyMutationInput, where?: SocialAssistantWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertSocialAssistant: {
    type: 'SocialAssistant'
    args: Record<MutationUpsertSocialAssistantArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SocialAssistantWhereUniqueInput, create: SocialAssistantCreateInput, update: SocialAssistantUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SocialAssistant> | prisma.SocialAssistant
  }
  deleteSocialAssistant: {
    type: 'SocialAssistant'
    args: Record<MutationDeleteSocialAssistantArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: SocialAssistantWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SocialAssistant | null> | prisma.SocialAssistant | null
  }
  deleteManySocialAssistants: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManySocialAssistantsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: SocialAssistantWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createBatch: {
    type: 'Batch'
    args: Record<MutationCreateBatchArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BatchCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Batch> | prisma.Batch
  }
  updateBatch: {
    type: 'Batch'
    args: Record<MutationUpdateBatchArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BatchUpdateInput, where: BatchWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Batch | null> | prisma.Batch | null
  }
  updateManyBatches: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyBatchesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: BatchUpdateManyMutationInput, where?: BatchWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertBatch: {
    type: 'Batch'
    args: Record<MutationUpsertBatchArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: BatchWhereUniqueInput, create: BatchCreateInput, update: BatchUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Batch> | prisma.Batch
  }
  deleteBatch: {
    type: 'Batch'
    args: Record<MutationDeleteBatchArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: BatchWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Batch | null> | prisma.Batch | null
  }
  deleteManyBatches: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyBatchesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: BatchWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createPresence: {
    type: 'Presence'
    args: Record<MutationCreatePresenceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PresenceCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Presence> | prisma.Presence
  }
  updatePresence: {
    type: 'Presence'
    args: Record<MutationUpdatePresenceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PresenceUpdateInput, where: PresenceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Presence | null> | prisma.Presence | null
  }
  updateManyPresences: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyPresencesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PresenceUpdateManyMutationInput, where?: PresenceWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertPresence: {
    type: 'Presence'
    args: Record<MutationUpsertPresenceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PresenceWhereUniqueInput, create: PresenceCreateInput, update: PresenceUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Presence> | prisma.Presence
  }
  deletePresence: {
    type: 'Presence'
    args: Record<MutationDeletePresenceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PresenceWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Presence | null> | prisma.Presence | null
  }
  deleteManyPresences: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyPresencesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PresenceWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'student', args?: SubscriptionStudentArgs[] | false, alias?: string  } 
  | { name: 'socialAssistant', args?: SubscriptionSocialAssistantArgs[] | false, alias?: string  } 
  | { name: 'batch', args?: SubscriptionBatchArgs[] | false, alias?: string  } 
  | { name: 'presence', args?: SubscriptionPresenceArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'student'
  | 'socialAssistant'
  | 'batch'
  | 'presence'


type SubscriptionStudentArgs =
  | 'where'
type SubscriptionSocialAssistantArgs =
  | 'where'
type SubscriptionBatchArgs =
  | 'where'
type SubscriptionPresenceArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  student: {
    type: 'StudentSubscriptionPayload'
    args: Record<SubscriptionStudentArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: StudentSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.StudentSubscriptionPayload | null> | prisma.StudentSubscriptionPayload | null
  }
  socialAssistant: {
    type: 'SocialAssistantSubscriptionPayload'
    args: Record<SubscriptionSocialAssistantArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: SocialAssistantSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SocialAssistantSubscriptionPayload | null> | prisma.SocialAssistantSubscriptionPayload | null
  }
  batch: {
    type: 'BatchSubscriptionPayload'
    args: Record<SubscriptionBatchArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: BatchSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchSubscriptionPayload | null> | prisma.BatchSubscriptionPayload | null
  }
  presence: {
    type: 'PresenceSubscriptionPayload'
    args: Record<SubscriptionPresenceArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PresenceSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PresenceSubscriptionPayload | null> | prisma.PresenceSubscriptionPayload | null
  }
}
  

// Types for StudentSubscriptionPayload

type StudentSubscriptionPayloadObject =
  | StudentSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type StudentSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface StudentSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"StudentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Student'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"StudentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Student | null> | prisma.Student | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'StudentPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"StudentSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.StudentPreviousValues | null> | prisma.StudentPreviousValues | null
  }
}
  

// Types for StudentPreviousValues

type StudentPreviousValuesObject =
  | StudentPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'firstName', args?: [] | false, alias?: string  } 
  | { name: 'lastName', args?: [] | false, alias?: string  } 
  | { name: 'sexe', args?: [] | false, alias?: string  } 
  | { name: 'privateEmail', args?: [] | false, alias?: string  } 
  | { name: 'pocoEmail', args?: [] | false, alias?: string  } 
  | { name: 'residencePermit', args?: [] | false, alias?: string  } 
  | { name: 'birthday', args?: [] | false, alias?: string  } 
  | { name: 'nationality', args?: [] | false, alias?: string  } 
  | { name: 'addressStreet', args?: [] | false, alias?: string  } 
  | { name: 'addressCity', args?: [] | false, alias?: string  } 
  | { name: 'addressNPA', args?: [] | false, alias?: string  } 
  | { name: 'addressCanton', args?: [] | false, alias?: string  } 
  | { name: 'organisation', args?: [] | false, alias?: string  } 
  | { name: 'financialParticipation', args?: [] | false, alias?: string  } 
  | { name: 'financialParticipationComment', args?: [] | false, alias?: string  } 
  | { name: 'borrowLaptops', args?: [] | false, alias?: string  } 
  | { name: 'foodCost', args?: [] | false, alias?: string  } 

type StudentPreviousValuesFields =
  | 'id'
  | 'firstName'
  | 'lastName'
  | 'sexe'
  | 'privateEmail'
  | 'pocoEmail'
  | 'residencePermit'
  | 'birthday'
  | 'nationality'
  | 'addressStreet'
  | 'addressCity'
  | 'addressNPA'
  | 'addressCanton'
  | 'organisation'
  | 'financialParticipation'
  | 'financialParticipationComment'
  | 'borrowLaptops'
  | 'foodCost'



  

export interface StudentPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  firstName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  sexe: {
    type: 'Sexe'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"StudentPreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Sexe> | prisma.Sexe
  }
  privateEmail: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  pocoEmail: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  residencePermit: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  birthday: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  nationality: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  addressStreet: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  addressCity: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  addressNPA: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  addressCanton: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  organisation: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  financialParticipation: {
    type: 'FinancialParticipation'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"StudentPreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.FinancialParticipation> | prisma.FinancialParticipation
  }
  financialParticipationComment: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  borrowLaptops: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  foodCost: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for SocialAssistantSubscriptionPayload

type SocialAssistantSubscriptionPayloadObject =
  | SocialAssistantSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type SocialAssistantSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface SocialAssistantSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"SocialAssistantSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'SocialAssistant'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SocialAssistantSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SocialAssistant | null> | prisma.SocialAssistant | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'SocialAssistantPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"SocialAssistantSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.SocialAssistantPreviousValues | null> | prisma.SocialAssistantPreviousValues | null
  }
}
  

// Types for SocialAssistantPreviousValues

type SocialAssistantPreviousValuesObject =
  | SocialAssistantPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'firstName', args?: [] | false, alias?: string  } 
  | { name: 'lastName', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 

type SocialAssistantPreviousValuesFields =
  | 'id'
  | 'firstName'
  | 'lastName'
  | 'phone'
  | 'email'



  

export interface SocialAssistantPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  firstName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for BatchSubscriptionPayload

type BatchSubscriptionPayloadObject =
  | BatchSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type BatchSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface BatchSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"BatchSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Batch'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BatchSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Batch | null> | prisma.Batch | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'BatchPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"BatchSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPreviousValues | null> | prisma.BatchPreviousValues | null
  }
}
  

// Types for BatchPreviousValues

type BatchPreviousValuesObject =
  | BatchPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'startingTime', args?: [] | false, alias?: string  } 
  | { name: 'endTime', args?: [] | false, alias?: string  } 

type BatchPreviousValuesFields =
  | 'id'
  | 'name'
  | 'startingTime'
  | 'endTime'



  

export interface BatchPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startingTime: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  endTime: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PresenceSubscriptionPayload

type PresenceSubscriptionPayloadObject =
  | PresenceSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type PresenceSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface PresenceSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PresenceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Presence'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PresenceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Presence | null> | prisma.Presence | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'PresencePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PresenceSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PresencePreviousValues | null> | prisma.PresencePreviousValues | null
  }
}
  

// Types for PresencePreviousValues

type PresencePreviousValuesObject =
  | PresencePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'dateStart', args?: [] | false, alias?: string  } 
  | { name: 'dateEnd', args?: [] | false, alias?: string  } 
  | { name: 'goodExcuse', args?: [] | false, alias?: string  } 
  | { name: 'reason', args?: [] | false, alias?: string  } 

type PresencePreviousValuesFields =
  | 'id'
  | 'dateStart'
  | 'dateEnd'
  | 'goodExcuse'
  | 'reason'



  

export interface PresencePreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dateStart: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dateEnd: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  goodExcuse: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  reason: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  


export interface StudentWhereUniqueInput {
  id?: string | null
}
export type StudentWhereUniqueInputInputObject =
  | Extract<keyof StudentWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface PresenceWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  dateStart?: string | null
  dateStart_not?: string | null
  dateStart_in?: string[]
  dateStart_not_in?: string[]
  dateStart_lt?: string | null
  dateStart_lte?: string | null
  dateStart_gt?: string | null
  dateStart_gte?: string | null
  dateEnd?: string | null
  dateEnd_not?: string | null
  dateEnd_in?: string[]
  dateEnd_not_in?: string[]
  dateEnd_lt?: string | null
  dateEnd_lte?: string | null
  dateEnd_gt?: string | null
  dateEnd_gte?: string | null
  goodExcuse?: boolean | null
  goodExcuse_not?: boolean | null
  reason?: string | null
  reason_not?: string | null
  reason_in?: string[]
  reason_not_in?: string[]
  reason_lt?: string | null
  reason_lte?: string | null
  reason_gt?: string | null
  reason_gte?: string | null
  reason_contains?: string | null
  reason_not_contains?: string | null
  reason_starts_with?: string | null
  reason_not_starts_with?: string | null
  reason_ends_with?: string | null
  reason_not_ends_with?: string | null
  student?: StudentWhereInput | null
  AND?: PresenceWhereInput[]
  OR?: PresenceWhereInput[]
  NOT?: PresenceWhereInput[]
}
export type PresenceWhereInputInputObject =
  | Extract<keyof PresenceWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'dateStart', alias?: string  } 
  | { name: 'dateStart_not', alias?: string  } 
  | { name: 'dateStart_in', alias?: string  } 
  | { name: 'dateStart_not_in', alias?: string  } 
  | { name: 'dateStart_lt', alias?: string  } 
  | { name: 'dateStart_lte', alias?: string  } 
  | { name: 'dateStart_gt', alias?: string  } 
  | { name: 'dateStart_gte', alias?: string  } 
  | { name: 'dateEnd', alias?: string  } 
  | { name: 'dateEnd_not', alias?: string  } 
  | { name: 'dateEnd_in', alias?: string  } 
  | { name: 'dateEnd_not_in', alias?: string  } 
  | { name: 'dateEnd_lt', alias?: string  } 
  | { name: 'dateEnd_lte', alias?: string  } 
  | { name: 'dateEnd_gt', alias?: string  } 
  | { name: 'dateEnd_gte', alias?: string  } 
  | { name: 'goodExcuse', alias?: string  } 
  | { name: 'goodExcuse_not', alias?: string  } 
  | { name: 'reason', alias?: string  } 
  | { name: 'reason_not', alias?: string  } 
  | { name: 'reason_in', alias?: string  } 
  | { name: 'reason_not_in', alias?: string  } 
  | { name: 'reason_lt', alias?: string  } 
  | { name: 'reason_lte', alias?: string  } 
  | { name: 'reason_gt', alias?: string  } 
  | { name: 'reason_gte', alias?: string  } 
  | { name: 'reason_contains', alias?: string  } 
  | { name: 'reason_not_contains', alias?: string  } 
  | { name: 'reason_starts_with', alias?: string  } 
  | { name: 'reason_not_starts_with', alias?: string  } 
  | { name: 'reason_ends_with', alias?: string  } 
  | { name: 'reason_not_ends_with', alias?: string  } 
  | { name: 'student', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface StudentWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  firstName?: string | null
  firstName_not?: string | null
  firstName_in?: string[]
  firstName_not_in?: string[]
  firstName_lt?: string | null
  firstName_lte?: string | null
  firstName_gt?: string | null
  firstName_gte?: string | null
  firstName_contains?: string | null
  firstName_not_contains?: string | null
  firstName_starts_with?: string | null
  firstName_not_starts_with?: string | null
  firstName_ends_with?: string | null
  firstName_not_ends_with?: string | null
  lastName?: string | null
  lastName_not?: string | null
  lastName_in?: string[]
  lastName_not_in?: string[]
  lastName_lt?: string | null
  lastName_lte?: string | null
  lastName_gt?: string | null
  lastName_gte?: string | null
  lastName_contains?: string | null
  lastName_not_contains?: string | null
  lastName_starts_with?: string | null
  lastName_not_starts_with?: string | null
  lastName_ends_with?: string | null
  lastName_not_ends_with?: string | null
  sexe?: prisma.Sexe | null
  sexe_not?: prisma.Sexe | null
  sexe_in?: prisma.Sexe[]
  sexe_not_in?: prisma.Sexe[]
  privateEmail?: string | null
  privateEmail_not?: string | null
  privateEmail_in?: string[]
  privateEmail_not_in?: string[]
  privateEmail_lt?: string | null
  privateEmail_lte?: string | null
  privateEmail_gt?: string | null
  privateEmail_gte?: string | null
  privateEmail_contains?: string | null
  privateEmail_not_contains?: string | null
  privateEmail_starts_with?: string | null
  privateEmail_not_starts_with?: string | null
  privateEmail_ends_with?: string | null
  privateEmail_not_ends_with?: string | null
  pocoEmail?: string | null
  pocoEmail_not?: string | null
  pocoEmail_in?: string[]
  pocoEmail_not_in?: string[]
  pocoEmail_lt?: string | null
  pocoEmail_lte?: string | null
  pocoEmail_gt?: string | null
  pocoEmail_gte?: string | null
  pocoEmail_contains?: string | null
  pocoEmail_not_contains?: string | null
  pocoEmail_starts_with?: string | null
  pocoEmail_not_starts_with?: string | null
  pocoEmail_ends_with?: string | null
  pocoEmail_not_ends_with?: string | null
  residencePermit?: string | null
  residencePermit_not?: string | null
  residencePermit_in?: string[]
  residencePermit_not_in?: string[]
  residencePermit_lt?: string | null
  residencePermit_lte?: string | null
  residencePermit_gt?: string | null
  residencePermit_gte?: string | null
  residencePermit_contains?: string | null
  residencePermit_not_contains?: string | null
  residencePermit_starts_with?: string | null
  residencePermit_not_starts_with?: string | null
  residencePermit_ends_with?: string | null
  residencePermit_not_ends_with?: string | null
  birthday?: string | null
  birthday_not?: string | null
  birthday_in?: string[]
  birthday_not_in?: string[]
  birthday_lt?: string | null
  birthday_lte?: string | null
  birthday_gt?: string | null
  birthday_gte?: string | null
  nationality?: string | null
  nationality_not?: string | null
  nationality_in?: string[]
  nationality_not_in?: string[]
  nationality_lt?: string | null
  nationality_lte?: string | null
  nationality_gt?: string | null
  nationality_gte?: string | null
  nationality_contains?: string | null
  nationality_not_contains?: string | null
  nationality_starts_with?: string | null
  nationality_not_starts_with?: string | null
  nationality_ends_with?: string | null
  nationality_not_ends_with?: string | null
  addressStreet?: string | null
  addressStreet_not?: string | null
  addressStreet_in?: string[]
  addressStreet_not_in?: string[]
  addressStreet_lt?: string | null
  addressStreet_lte?: string | null
  addressStreet_gt?: string | null
  addressStreet_gte?: string | null
  addressStreet_contains?: string | null
  addressStreet_not_contains?: string | null
  addressStreet_starts_with?: string | null
  addressStreet_not_starts_with?: string | null
  addressStreet_ends_with?: string | null
  addressStreet_not_ends_with?: string | null
  addressCity?: string | null
  addressCity_not?: string | null
  addressCity_in?: string[]
  addressCity_not_in?: string[]
  addressCity_lt?: string | null
  addressCity_lte?: string | null
  addressCity_gt?: string | null
  addressCity_gte?: string | null
  addressCity_contains?: string | null
  addressCity_not_contains?: string | null
  addressCity_starts_with?: string | null
  addressCity_not_starts_with?: string | null
  addressCity_ends_with?: string | null
  addressCity_not_ends_with?: string | null
  addressNPA?: number | null
  addressNPA_not?: number | null
  addressNPA_in?: number[]
  addressNPA_not_in?: number[]
  addressNPA_lt?: number | null
  addressNPA_lte?: number | null
  addressNPA_gt?: number | null
  addressNPA_gte?: number | null
  addressCanton?: string | null
  addressCanton_not?: string | null
  addressCanton_in?: string[]
  addressCanton_not_in?: string[]
  addressCanton_lt?: string | null
  addressCanton_lte?: string | null
  addressCanton_gt?: string | null
  addressCanton_gte?: string | null
  addressCanton_contains?: string | null
  addressCanton_not_contains?: string | null
  addressCanton_starts_with?: string | null
  addressCanton_not_starts_with?: string | null
  addressCanton_ends_with?: string | null
  addressCanton_not_ends_with?: string | null
  organisation?: string | null
  organisation_not?: string | null
  organisation_in?: string[]
  organisation_not_in?: string[]
  organisation_lt?: string | null
  organisation_lte?: string | null
  organisation_gt?: string | null
  organisation_gte?: string | null
  organisation_contains?: string | null
  organisation_not_contains?: string | null
  organisation_starts_with?: string | null
  organisation_not_starts_with?: string | null
  organisation_ends_with?: string | null
  organisation_not_ends_with?: string | null
  socialAssistant?: SocialAssistantWhereInput | null
  financialParticipation?: prisma.FinancialParticipation | null
  financialParticipation_not?: prisma.FinancialParticipation | null
  financialParticipation_in?: prisma.FinancialParticipation[]
  financialParticipation_not_in?: prisma.FinancialParticipation[]
  financialParticipationComment?: string | null
  financialParticipationComment_not?: string | null
  financialParticipationComment_in?: string[]
  financialParticipationComment_not_in?: string[]
  financialParticipationComment_lt?: string | null
  financialParticipationComment_lte?: string | null
  financialParticipationComment_gt?: string | null
  financialParticipationComment_gte?: string | null
  financialParticipationComment_contains?: string | null
  financialParticipationComment_not_contains?: string | null
  financialParticipationComment_starts_with?: string | null
  financialParticipationComment_not_starts_with?: string | null
  financialParticipationComment_ends_with?: string | null
  financialParticipationComment_not_ends_with?: string | null
  borrowLaptops?: boolean | null
  borrowLaptops_not?: boolean | null
  foodCost?: string | null
  foodCost_not?: string | null
  foodCost_in?: string[]
  foodCost_not_in?: string[]
  foodCost_lt?: string | null
  foodCost_lte?: string | null
  foodCost_gt?: string | null
  foodCost_gte?: string | null
  foodCost_contains?: string | null
  foodCost_not_contains?: string | null
  foodCost_starts_with?: string | null
  foodCost_not_starts_with?: string | null
  foodCost_ends_with?: string | null
  foodCost_not_ends_with?: string | null
  presences_every?: PresenceWhereInput | null
  presences_some?: PresenceWhereInput | null
  presences_none?: PresenceWhereInput | null
  batch?: BatchWhereInput | null
  AND?: StudentWhereInput[]
  OR?: StudentWhereInput[]
  NOT?: StudentWhereInput[]
}
export type StudentWhereInputInputObject =
  | Extract<keyof StudentWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'firstName_not', alias?: string  } 
  | { name: 'firstName_in', alias?: string  } 
  | { name: 'firstName_not_in', alias?: string  } 
  | { name: 'firstName_lt', alias?: string  } 
  | { name: 'firstName_lte', alias?: string  } 
  | { name: 'firstName_gt', alias?: string  } 
  | { name: 'firstName_gte', alias?: string  } 
  | { name: 'firstName_contains', alias?: string  } 
  | { name: 'firstName_not_contains', alias?: string  } 
  | { name: 'firstName_starts_with', alias?: string  } 
  | { name: 'firstName_not_starts_with', alias?: string  } 
  | { name: 'firstName_ends_with', alias?: string  } 
  | { name: 'firstName_not_ends_with', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'lastName_not', alias?: string  } 
  | { name: 'lastName_in', alias?: string  } 
  | { name: 'lastName_not_in', alias?: string  } 
  | { name: 'lastName_lt', alias?: string  } 
  | { name: 'lastName_lte', alias?: string  } 
  | { name: 'lastName_gt', alias?: string  } 
  | { name: 'lastName_gte', alias?: string  } 
  | { name: 'lastName_contains', alias?: string  } 
  | { name: 'lastName_not_contains', alias?: string  } 
  | { name: 'lastName_starts_with', alias?: string  } 
  | { name: 'lastName_not_starts_with', alias?: string  } 
  | { name: 'lastName_ends_with', alias?: string  } 
  | { name: 'lastName_not_ends_with', alias?: string  } 
  | { name: 'sexe', alias?: string  } 
  | { name: 'sexe_not', alias?: string  } 
  | { name: 'sexe_in', alias?: string  } 
  | { name: 'sexe_not_in', alias?: string  } 
  | { name: 'privateEmail', alias?: string  } 
  | { name: 'privateEmail_not', alias?: string  } 
  | { name: 'privateEmail_in', alias?: string  } 
  | { name: 'privateEmail_not_in', alias?: string  } 
  | { name: 'privateEmail_lt', alias?: string  } 
  | { name: 'privateEmail_lte', alias?: string  } 
  | { name: 'privateEmail_gt', alias?: string  } 
  | { name: 'privateEmail_gte', alias?: string  } 
  | { name: 'privateEmail_contains', alias?: string  } 
  | { name: 'privateEmail_not_contains', alias?: string  } 
  | { name: 'privateEmail_starts_with', alias?: string  } 
  | { name: 'privateEmail_not_starts_with', alias?: string  } 
  | { name: 'privateEmail_ends_with', alias?: string  } 
  | { name: 'privateEmail_not_ends_with', alias?: string  } 
  | { name: 'pocoEmail', alias?: string  } 
  | { name: 'pocoEmail_not', alias?: string  } 
  | { name: 'pocoEmail_in', alias?: string  } 
  | { name: 'pocoEmail_not_in', alias?: string  } 
  | { name: 'pocoEmail_lt', alias?: string  } 
  | { name: 'pocoEmail_lte', alias?: string  } 
  | { name: 'pocoEmail_gt', alias?: string  } 
  | { name: 'pocoEmail_gte', alias?: string  } 
  | { name: 'pocoEmail_contains', alias?: string  } 
  | { name: 'pocoEmail_not_contains', alias?: string  } 
  | { name: 'pocoEmail_starts_with', alias?: string  } 
  | { name: 'pocoEmail_not_starts_with', alias?: string  } 
  | { name: 'pocoEmail_ends_with', alias?: string  } 
  | { name: 'pocoEmail_not_ends_with', alias?: string  } 
  | { name: 'residencePermit', alias?: string  } 
  | { name: 'residencePermit_not', alias?: string  } 
  | { name: 'residencePermit_in', alias?: string  } 
  | { name: 'residencePermit_not_in', alias?: string  } 
  | { name: 'residencePermit_lt', alias?: string  } 
  | { name: 'residencePermit_lte', alias?: string  } 
  | { name: 'residencePermit_gt', alias?: string  } 
  | { name: 'residencePermit_gte', alias?: string  } 
  | { name: 'residencePermit_contains', alias?: string  } 
  | { name: 'residencePermit_not_contains', alias?: string  } 
  | { name: 'residencePermit_starts_with', alias?: string  } 
  | { name: 'residencePermit_not_starts_with', alias?: string  } 
  | { name: 'residencePermit_ends_with', alias?: string  } 
  | { name: 'residencePermit_not_ends_with', alias?: string  } 
  | { name: 'birthday', alias?: string  } 
  | { name: 'birthday_not', alias?: string  } 
  | { name: 'birthday_in', alias?: string  } 
  | { name: 'birthday_not_in', alias?: string  } 
  | { name: 'birthday_lt', alias?: string  } 
  | { name: 'birthday_lte', alias?: string  } 
  | { name: 'birthday_gt', alias?: string  } 
  | { name: 'birthday_gte', alias?: string  } 
  | { name: 'nationality', alias?: string  } 
  | { name: 'nationality_not', alias?: string  } 
  | { name: 'nationality_in', alias?: string  } 
  | { name: 'nationality_not_in', alias?: string  } 
  | { name: 'nationality_lt', alias?: string  } 
  | { name: 'nationality_lte', alias?: string  } 
  | { name: 'nationality_gt', alias?: string  } 
  | { name: 'nationality_gte', alias?: string  } 
  | { name: 'nationality_contains', alias?: string  } 
  | { name: 'nationality_not_contains', alias?: string  } 
  | { name: 'nationality_starts_with', alias?: string  } 
  | { name: 'nationality_not_starts_with', alias?: string  } 
  | { name: 'nationality_ends_with', alias?: string  } 
  | { name: 'nationality_not_ends_with', alias?: string  } 
  | { name: 'addressStreet', alias?: string  } 
  | { name: 'addressStreet_not', alias?: string  } 
  | { name: 'addressStreet_in', alias?: string  } 
  | { name: 'addressStreet_not_in', alias?: string  } 
  | { name: 'addressStreet_lt', alias?: string  } 
  | { name: 'addressStreet_lte', alias?: string  } 
  | { name: 'addressStreet_gt', alias?: string  } 
  | { name: 'addressStreet_gte', alias?: string  } 
  | { name: 'addressStreet_contains', alias?: string  } 
  | { name: 'addressStreet_not_contains', alias?: string  } 
  | { name: 'addressStreet_starts_with', alias?: string  } 
  | { name: 'addressStreet_not_starts_with', alias?: string  } 
  | { name: 'addressStreet_ends_with', alias?: string  } 
  | { name: 'addressStreet_not_ends_with', alias?: string  } 
  | { name: 'addressCity', alias?: string  } 
  | { name: 'addressCity_not', alias?: string  } 
  | { name: 'addressCity_in', alias?: string  } 
  | { name: 'addressCity_not_in', alias?: string  } 
  | { name: 'addressCity_lt', alias?: string  } 
  | { name: 'addressCity_lte', alias?: string  } 
  | { name: 'addressCity_gt', alias?: string  } 
  | { name: 'addressCity_gte', alias?: string  } 
  | { name: 'addressCity_contains', alias?: string  } 
  | { name: 'addressCity_not_contains', alias?: string  } 
  | { name: 'addressCity_starts_with', alias?: string  } 
  | { name: 'addressCity_not_starts_with', alias?: string  } 
  | { name: 'addressCity_ends_with', alias?: string  } 
  | { name: 'addressCity_not_ends_with', alias?: string  } 
  | { name: 'addressNPA', alias?: string  } 
  | { name: 'addressNPA_not', alias?: string  } 
  | { name: 'addressNPA_in', alias?: string  } 
  | { name: 'addressNPA_not_in', alias?: string  } 
  | { name: 'addressNPA_lt', alias?: string  } 
  | { name: 'addressNPA_lte', alias?: string  } 
  | { name: 'addressNPA_gt', alias?: string  } 
  | { name: 'addressNPA_gte', alias?: string  } 
  | { name: 'addressCanton', alias?: string  } 
  | { name: 'addressCanton_not', alias?: string  } 
  | { name: 'addressCanton_in', alias?: string  } 
  | { name: 'addressCanton_not_in', alias?: string  } 
  | { name: 'addressCanton_lt', alias?: string  } 
  | { name: 'addressCanton_lte', alias?: string  } 
  | { name: 'addressCanton_gt', alias?: string  } 
  | { name: 'addressCanton_gte', alias?: string  } 
  | { name: 'addressCanton_contains', alias?: string  } 
  | { name: 'addressCanton_not_contains', alias?: string  } 
  | { name: 'addressCanton_starts_with', alias?: string  } 
  | { name: 'addressCanton_not_starts_with', alias?: string  } 
  | { name: 'addressCanton_ends_with', alias?: string  } 
  | { name: 'addressCanton_not_ends_with', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'organisation_not', alias?: string  } 
  | { name: 'organisation_in', alias?: string  } 
  | { name: 'organisation_not_in', alias?: string  } 
  | { name: 'organisation_lt', alias?: string  } 
  | { name: 'organisation_lte', alias?: string  } 
  | { name: 'organisation_gt', alias?: string  } 
  | { name: 'organisation_gte', alias?: string  } 
  | { name: 'organisation_contains', alias?: string  } 
  | { name: 'organisation_not_contains', alias?: string  } 
  | { name: 'organisation_starts_with', alias?: string  } 
  | { name: 'organisation_not_starts_with', alias?: string  } 
  | { name: 'organisation_ends_with', alias?: string  } 
  | { name: 'organisation_not_ends_with', alias?: string  } 
  | { name: 'socialAssistant', alias?: string  } 
  | { name: 'financialParticipation', alias?: string  } 
  | { name: 'financialParticipation_not', alias?: string  } 
  | { name: 'financialParticipation_in', alias?: string  } 
  | { name: 'financialParticipation_not_in', alias?: string  } 
  | { name: 'financialParticipationComment', alias?: string  } 
  | { name: 'financialParticipationComment_not', alias?: string  } 
  | { name: 'financialParticipationComment_in', alias?: string  } 
  | { name: 'financialParticipationComment_not_in', alias?: string  } 
  | { name: 'financialParticipationComment_lt', alias?: string  } 
  | { name: 'financialParticipationComment_lte', alias?: string  } 
  | { name: 'financialParticipationComment_gt', alias?: string  } 
  | { name: 'financialParticipationComment_gte', alias?: string  } 
  | { name: 'financialParticipationComment_contains', alias?: string  } 
  | { name: 'financialParticipationComment_not_contains', alias?: string  } 
  | { name: 'financialParticipationComment_starts_with', alias?: string  } 
  | { name: 'financialParticipationComment_not_starts_with', alias?: string  } 
  | { name: 'financialParticipationComment_ends_with', alias?: string  } 
  | { name: 'financialParticipationComment_not_ends_with', alias?: string  } 
  | { name: 'borrowLaptops', alias?: string  } 
  | { name: 'borrowLaptops_not', alias?: string  } 
  | { name: 'foodCost', alias?: string  } 
  | { name: 'foodCost_not', alias?: string  } 
  | { name: 'foodCost_in', alias?: string  } 
  | { name: 'foodCost_not_in', alias?: string  } 
  | { name: 'foodCost_lt', alias?: string  } 
  | { name: 'foodCost_lte', alias?: string  } 
  | { name: 'foodCost_gt', alias?: string  } 
  | { name: 'foodCost_gte', alias?: string  } 
  | { name: 'foodCost_contains', alias?: string  } 
  | { name: 'foodCost_not_contains', alias?: string  } 
  | { name: 'foodCost_starts_with', alias?: string  } 
  | { name: 'foodCost_not_starts_with', alias?: string  } 
  | { name: 'foodCost_ends_with', alias?: string  } 
  | { name: 'foodCost_not_ends_with', alias?: string  } 
  | { name: 'presences_every', alias?: string  } 
  | { name: 'presences_some', alias?: string  } 
  | { name: 'presences_none', alias?: string  } 
  | { name: 'batch', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SocialAssistantWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  firstName?: string | null
  firstName_not?: string | null
  firstName_in?: string[]
  firstName_not_in?: string[]
  firstName_lt?: string | null
  firstName_lte?: string | null
  firstName_gt?: string | null
  firstName_gte?: string | null
  firstName_contains?: string | null
  firstName_not_contains?: string | null
  firstName_starts_with?: string | null
  firstName_not_starts_with?: string | null
  firstName_ends_with?: string | null
  firstName_not_ends_with?: string | null
  lastName?: string | null
  lastName_not?: string | null
  lastName_in?: string[]
  lastName_not_in?: string[]
  lastName_lt?: string | null
  lastName_lte?: string | null
  lastName_gt?: string | null
  lastName_gte?: string | null
  lastName_contains?: string | null
  lastName_not_contains?: string | null
  lastName_starts_with?: string | null
  lastName_not_starts_with?: string | null
  lastName_ends_with?: string | null
  lastName_not_ends_with?: string | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  AND?: SocialAssistantWhereInput[]
  OR?: SocialAssistantWhereInput[]
  NOT?: SocialAssistantWhereInput[]
}
export type SocialAssistantWhereInputInputObject =
  | Extract<keyof SocialAssistantWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'firstName_not', alias?: string  } 
  | { name: 'firstName_in', alias?: string  } 
  | { name: 'firstName_not_in', alias?: string  } 
  | { name: 'firstName_lt', alias?: string  } 
  | { name: 'firstName_lte', alias?: string  } 
  | { name: 'firstName_gt', alias?: string  } 
  | { name: 'firstName_gte', alias?: string  } 
  | { name: 'firstName_contains', alias?: string  } 
  | { name: 'firstName_not_contains', alias?: string  } 
  | { name: 'firstName_starts_with', alias?: string  } 
  | { name: 'firstName_not_starts_with', alias?: string  } 
  | { name: 'firstName_ends_with', alias?: string  } 
  | { name: 'firstName_not_ends_with', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'lastName_not', alias?: string  } 
  | { name: 'lastName_in', alias?: string  } 
  | { name: 'lastName_not_in', alias?: string  } 
  | { name: 'lastName_lt', alias?: string  } 
  | { name: 'lastName_lte', alias?: string  } 
  | { name: 'lastName_gt', alias?: string  } 
  | { name: 'lastName_gte', alias?: string  } 
  | { name: 'lastName_contains', alias?: string  } 
  | { name: 'lastName_not_contains', alias?: string  } 
  | { name: 'lastName_starts_with', alias?: string  } 
  | { name: 'lastName_not_starts_with', alias?: string  } 
  | { name: 'lastName_ends_with', alias?: string  } 
  | { name: 'lastName_not_ends_with', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BatchWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  startingTime?: string | null
  startingTime_not?: string | null
  startingTime_in?: string[]
  startingTime_not_in?: string[]
  startingTime_lt?: string | null
  startingTime_lte?: string | null
  startingTime_gt?: string | null
  startingTime_gte?: string | null
  endTime?: string | null
  endTime_not?: string | null
  endTime_in?: string[]
  endTime_not_in?: string[]
  endTime_lt?: string | null
  endTime_lte?: string | null
  endTime_gt?: string | null
  endTime_gte?: string | null
  AND?: BatchWhereInput[]
  OR?: BatchWhereInput[]
  NOT?: BatchWhereInput[]
}
export type BatchWhereInputInputObject =
  | Extract<keyof BatchWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'startingTime', alias?: string  } 
  | { name: 'startingTime_not', alias?: string  } 
  | { name: 'startingTime_in', alias?: string  } 
  | { name: 'startingTime_not_in', alias?: string  } 
  | { name: 'startingTime_lt', alias?: string  } 
  | { name: 'startingTime_lte', alias?: string  } 
  | { name: 'startingTime_gt', alias?: string  } 
  | { name: 'startingTime_gte', alias?: string  } 
  | { name: 'endTime', alias?: string  } 
  | { name: 'endTime_not', alias?: string  } 
  | { name: 'endTime_in', alias?: string  } 
  | { name: 'endTime_not_in', alias?: string  } 
  | { name: 'endTime_lt', alias?: string  } 
  | { name: 'endTime_lte', alias?: string  } 
  | { name: 'endTime_gt', alias?: string  } 
  | { name: 'endTime_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SocialAssistantWhereUniqueInput {
  id?: string | null
}
export type SocialAssistantWhereUniqueInputInputObject =
  | Extract<keyof SocialAssistantWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface BatchWhereUniqueInput {
  id?: string | null
  name?: string | null
}
export type BatchWhereUniqueInputInputObject =
  | Extract<keyof BatchWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  
export interface PresenceWhereUniqueInput {
  id?: string | null
}
export type PresenceWhereUniqueInputInputObject =
  | Extract<keyof PresenceWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface StudentCreateInput {
  id?: string | null
  firstName?: string
  lastName?: string
  sexe?: prisma.Sexe
  privateEmail?: string | null
  pocoEmail?: string | null
  residencePermit?: string
  birthday?: string
  nationality?: string
  addressStreet?: string
  addressCity?: string
  addressNPA?: number
  addressCanton?: string
  organisation?: string | null
  socialAssistant?: SocialAssistantCreateOneInput | null
  financialParticipation?: prisma.FinancialParticipation
  financialParticipationComment?: string | null
  borrowLaptops?: boolean
  foodCost?: string | null
  presences?: PresenceCreateManyWithoutStudentInput | null
  batch?: BatchCreateOneInput
}
export type StudentCreateInputInputObject =
  | Extract<keyof StudentCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'sexe', alias?: string  } 
  | { name: 'privateEmail', alias?: string  } 
  | { name: 'pocoEmail', alias?: string  } 
  | { name: 'residencePermit', alias?: string  } 
  | { name: 'birthday', alias?: string  } 
  | { name: 'nationality', alias?: string  } 
  | { name: 'addressStreet', alias?: string  } 
  | { name: 'addressCity', alias?: string  } 
  | { name: 'addressNPA', alias?: string  } 
  | { name: 'addressCanton', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'socialAssistant', alias?: string  } 
  | { name: 'financialParticipation', alias?: string  } 
  | { name: 'financialParticipationComment', alias?: string  } 
  | { name: 'borrowLaptops', alias?: string  } 
  | { name: 'foodCost', alias?: string  } 
  | { name: 'presences', alias?: string  } 
  | { name: 'batch', alias?: string  } 
  
export interface SocialAssistantCreateOneInput {
  create?: SocialAssistantCreateInput | null
  connect?: SocialAssistantWhereUniqueInput | null
}
export type SocialAssistantCreateOneInputInputObject =
  | Extract<keyof SocialAssistantCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SocialAssistantCreateInput {
  id?: string | null
  firstName?: string
  lastName?: string
  phone?: string | null
  email?: string | null
}
export type SocialAssistantCreateInputInputObject =
  | Extract<keyof SocialAssistantCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface PresenceCreateManyWithoutStudentInput {
  create?: PresenceCreateWithoutStudentInput[]
  connect?: PresenceWhereUniqueInput[]
}
export type PresenceCreateManyWithoutStudentInputInputObject =
  | Extract<keyof PresenceCreateManyWithoutStudentInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PresenceCreateWithoutStudentInput {
  id?: string | null
  dateStart?: string
  dateEnd?: string
  goodExcuse?: boolean | null
  reason?: string | null
}
export type PresenceCreateWithoutStudentInputInputObject =
  | Extract<keyof PresenceCreateWithoutStudentInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'dateStart', alias?: string  } 
  | { name: 'dateEnd', alias?: string  } 
  | { name: 'goodExcuse', alias?: string  } 
  | { name: 'reason', alias?: string  } 
  
export interface BatchCreateOneInput {
  create?: BatchCreateInput | null
  connect?: BatchWhereUniqueInput | null
}
export type BatchCreateOneInputInputObject =
  | Extract<keyof BatchCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BatchCreateInput {
  id?: string | null
  name?: string
  startingTime?: string
  endTime?: string
}
export type BatchCreateInputInputObject =
  | Extract<keyof BatchCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'startingTime', alias?: string  } 
  | { name: 'endTime', alias?: string  } 
  
export interface StudentUpdateInput {
  firstName?: string | null
  lastName?: string | null
  sexe?: prisma.Sexe | null
  privateEmail?: string | null
  pocoEmail?: string | null
  residencePermit?: string | null
  birthday?: string | null
  nationality?: string | null
  addressStreet?: string | null
  addressCity?: string | null
  addressNPA?: number | null
  addressCanton?: string | null
  organisation?: string | null
  socialAssistant?: SocialAssistantUpdateOneInput | null
  financialParticipation?: prisma.FinancialParticipation | null
  financialParticipationComment?: string | null
  borrowLaptops?: boolean | null
  foodCost?: string | null
  presences?: PresenceUpdateManyWithoutStudentInput | null
  batch?: BatchUpdateOneRequiredInput | null
}
export type StudentUpdateInputInputObject =
  | Extract<keyof StudentUpdateInput, string>
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'sexe', alias?: string  } 
  | { name: 'privateEmail', alias?: string  } 
  | { name: 'pocoEmail', alias?: string  } 
  | { name: 'residencePermit', alias?: string  } 
  | { name: 'birthday', alias?: string  } 
  | { name: 'nationality', alias?: string  } 
  | { name: 'addressStreet', alias?: string  } 
  | { name: 'addressCity', alias?: string  } 
  | { name: 'addressNPA', alias?: string  } 
  | { name: 'addressCanton', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'socialAssistant', alias?: string  } 
  | { name: 'financialParticipation', alias?: string  } 
  | { name: 'financialParticipationComment', alias?: string  } 
  | { name: 'borrowLaptops', alias?: string  } 
  | { name: 'foodCost', alias?: string  } 
  | { name: 'presences', alias?: string  } 
  | { name: 'batch', alias?: string  } 
  
export interface SocialAssistantUpdateOneInput {
  create?: SocialAssistantCreateInput | null
  update?: SocialAssistantUpdateDataInput | null
  upsert?: SocialAssistantUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: SocialAssistantWhereUniqueInput | null
}
export type SocialAssistantUpdateOneInputInputObject =
  | Extract<keyof SocialAssistantUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface SocialAssistantUpdateDataInput {
  firstName?: string | null
  lastName?: string | null
  phone?: string | null
  email?: string | null
}
export type SocialAssistantUpdateDataInputInputObject =
  | Extract<keyof SocialAssistantUpdateDataInput, string>
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface SocialAssistantUpsertNestedInput {
  update?: SocialAssistantUpdateDataInput
  create?: SocialAssistantCreateInput
}
export type SocialAssistantUpsertNestedInputInputObject =
  | Extract<keyof SocialAssistantUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PresenceUpdateManyWithoutStudentInput {
  create?: PresenceCreateWithoutStudentInput[]
  delete?: PresenceWhereUniqueInput[]
  connect?: PresenceWhereUniqueInput[]
  set?: PresenceWhereUniqueInput[]
  disconnect?: PresenceWhereUniqueInput[]
  update?: PresenceUpdateWithWhereUniqueWithoutStudentInput[]
  upsert?: PresenceUpsertWithWhereUniqueWithoutStudentInput[]
  deleteMany?: PresenceScalarWhereInput[]
  updateMany?: PresenceUpdateManyWithWhereNestedInput[]
}
export type PresenceUpdateManyWithoutStudentInputInputObject =
  | Extract<keyof PresenceUpdateManyWithoutStudentInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface PresenceUpdateWithWhereUniqueWithoutStudentInput {
  where?: PresenceWhereUniqueInput
  data?: PresenceUpdateWithoutStudentDataInput
}
export type PresenceUpdateWithWhereUniqueWithoutStudentInputInputObject =
  | Extract<keyof PresenceUpdateWithWhereUniqueWithoutStudentInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface PresenceUpdateWithoutStudentDataInput {
  dateStart?: string | null
  dateEnd?: string | null
  goodExcuse?: boolean | null
  reason?: string | null
}
export type PresenceUpdateWithoutStudentDataInputInputObject =
  | Extract<keyof PresenceUpdateWithoutStudentDataInput, string>
  | { name: 'dateStart', alias?: string  } 
  | { name: 'dateEnd', alias?: string  } 
  | { name: 'goodExcuse', alias?: string  } 
  | { name: 'reason', alias?: string  } 
  
export interface PresenceUpsertWithWhereUniqueWithoutStudentInput {
  where?: PresenceWhereUniqueInput
  update?: PresenceUpdateWithoutStudentDataInput
  create?: PresenceCreateWithoutStudentInput
}
export type PresenceUpsertWithWhereUniqueWithoutStudentInputInputObject =
  | Extract<keyof PresenceUpsertWithWhereUniqueWithoutStudentInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PresenceScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  dateStart?: string | null
  dateStart_not?: string | null
  dateStart_in?: string[]
  dateStart_not_in?: string[]
  dateStart_lt?: string | null
  dateStart_lte?: string | null
  dateStart_gt?: string | null
  dateStart_gte?: string | null
  dateEnd?: string | null
  dateEnd_not?: string | null
  dateEnd_in?: string[]
  dateEnd_not_in?: string[]
  dateEnd_lt?: string | null
  dateEnd_lte?: string | null
  dateEnd_gt?: string | null
  dateEnd_gte?: string | null
  goodExcuse?: boolean | null
  goodExcuse_not?: boolean | null
  reason?: string | null
  reason_not?: string | null
  reason_in?: string[]
  reason_not_in?: string[]
  reason_lt?: string | null
  reason_lte?: string | null
  reason_gt?: string | null
  reason_gte?: string | null
  reason_contains?: string | null
  reason_not_contains?: string | null
  reason_starts_with?: string | null
  reason_not_starts_with?: string | null
  reason_ends_with?: string | null
  reason_not_ends_with?: string | null
  AND?: PresenceScalarWhereInput[]
  OR?: PresenceScalarWhereInput[]
  NOT?: PresenceScalarWhereInput[]
}
export type PresenceScalarWhereInputInputObject =
  | Extract<keyof PresenceScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'dateStart', alias?: string  } 
  | { name: 'dateStart_not', alias?: string  } 
  | { name: 'dateStart_in', alias?: string  } 
  | { name: 'dateStart_not_in', alias?: string  } 
  | { name: 'dateStart_lt', alias?: string  } 
  | { name: 'dateStart_lte', alias?: string  } 
  | { name: 'dateStart_gt', alias?: string  } 
  | { name: 'dateStart_gte', alias?: string  } 
  | { name: 'dateEnd', alias?: string  } 
  | { name: 'dateEnd_not', alias?: string  } 
  | { name: 'dateEnd_in', alias?: string  } 
  | { name: 'dateEnd_not_in', alias?: string  } 
  | { name: 'dateEnd_lt', alias?: string  } 
  | { name: 'dateEnd_lte', alias?: string  } 
  | { name: 'dateEnd_gt', alias?: string  } 
  | { name: 'dateEnd_gte', alias?: string  } 
  | { name: 'goodExcuse', alias?: string  } 
  | { name: 'goodExcuse_not', alias?: string  } 
  | { name: 'reason', alias?: string  } 
  | { name: 'reason_not', alias?: string  } 
  | { name: 'reason_in', alias?: string  } 
  | { name: 'reason_not_in', alias?: string  } 
  | { name: 'reason_lt', alias?: string  } 
  | { name: 'reason_lte', alias?: string  } 
  | { name: 'reason_gt', alias?: string  } 
  | { name: 'reason_gte', alias?: string  } 
  | { name: 'reason_contains', alias?: string  } 
  | { name: 'reason_not_contains', alias?: string  } 
  | { name: 'reason_starts_with', alias?: string  } 
  | { name: 'reason_not_starts_with', alias?: string  } 
  | { name: 'reason_ends_with', alias?: string  } 
  | { name: 'reason_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PresenceUpdateManyWithWhereNestedInput {
  where?: PresenceScalarWhereInput
  data?: PresenceUpdateManyDataInput
}
export type PresenceUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof PresenceUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface PresenceUpdateManyDataInput {
  dateStart?: string | null
  dateEnd?: string | null
  goodExcuse?: boolean | null
  reason?: string | null
}
export type PresenceUpdateManyDataInputInputObject =
  | Extract<keyof PresenceUpdateManyDataInput, string>
  | { name: 'dateStart', alias?: string  } 
  | { name: 'dateEnd', alias?: string  } 
  | { name: 'goodExcuse', alias?: string  } 
  | { name: 'reason', alias?: string  } 
  
export interface BatchUpdateOneRequiredInput {
  create?: BatchCreateInput | null
  update?: BatchUpdateDataInput | null
  upsert?: BatchUpsertNestedInput | null
  connect?: BatchWhereUniqueInput | null
}
export type BatchUpdateOneRequiredInputInputObject =
  | Extract<keyof BatchUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface BatchUpdateDataInput {
  name?: string | null
  startingTime?: string | null
  endTime?: string | null
}
export type BatchUpdateDataInputInputObject =
  | Extract<keyof BatchUpdateDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'startingTime', alias?: string  } 
  | { name: 'endTime', alias?: string  } 
  
export interface BatchUpsertNestedInput {
  update?: BatchUpdateDataInput
  create?: BatchCreateInput
}
export type BatchUpsertNestedInputInputObject =
  | Extract<keyof BatchUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface StudentUpdateManyMutationInput {
  firstName?: string | null
  lastName?: string | null
  sexe?: prisma.Sexe | null
  privateEmail?: string | null
  pocoEmail?: string | null
  residencePermit?: string | null
  birthday?: string | null
  nationality?: string | null
  addressStreet?: string | null
  addressCity?: string | null
  addressNPA?: number | null
  addressCanton?: string | null
  organisation?: string | null
  financialParticipation?: prisma.FinancialParticipation | null
  financialParticipationComment?: string | null
  borrowLaptops?: boolean | null
  foodCost?: string | null
}
export type StudentUpdateManyMutationInputInputObject =
  | Extract<keyof StudentUpdateManyMutationInput, string>
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'sexe', alias?: string  } 
  | { name: 'privateEmail', alias?: string  } 
  | { name: 'pocoEmail', alias?: string  } 
  | { name: 'residencePermit', alias?: string  } 
  | { name: 'birthday', alias?: string  } 
  | { name: 'nationality', alias?: string  } 
  | { name: 'addressStreet', alias?: string  } 
  | { name: 'addressCity', alias?: string  } 
  | { name: 'addressNPA', alias?: string  } 
  | { name: 'addressCanton', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'financialParticipation', alias?: string  } 
  | { name: 'financialParticipationComment', alias?: string  } 
  | { name: 'borrowLaptops', alias?: string  } 
  | { name: 'foodCost', alias?: string  } 
  
export interface SocialAssistantUpdateInput {
  firstName?: string | null
  lastName?: string | null
  phone?: string | null
  email?: string | null
}
export type SocialAssistantUpdateInputInputObject =
  | Extract<keyof SocialAssistantUpdateInput, string>
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface SocialAssistantUpdateManyMutationInput {
  firstName?: string | null
  lastName?: string | null
  phone?: string | null
  email?: string | null
}
export type SocialAssistantUpdateManyMutationInputInputObject =
  | Extract<keyof SocialAssistantUpdateManyMutationInput, string>
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface BatchUpdateInput {
  name?: string | null
  startingTime?: string | null
  endTime?: string | null
}
export type BatchUpdateInputInputObject =
  | Extract<keyof BatchUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'startingTime', alias?: string  } 
  | { name: 'endTime', alias?: string  } 
  
export interface BatchUpdateManyMutationInput {
  name?: string | null
  startingTime?: string | null
  endTime?: string | null
}
export type BatchUpdateManyMutationInputInputObject =
  | Extract<keyof BatchUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'startingTime', alias?: string  } 
  | { name: 'endTime', alias?: string  } 
  
export interface PresenceCreateInput {
  id?: string | null
  dateStart?: string
  dateEnd?: string
  goodExcuse?: boolean | null
  reason?: string | null
  student?: StudentCreateOneWithoutPresencesInput
}
export type PresenceCreateInputInputObject =
  | Extract<keyof PresenceCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'dateStart', alias?: string  } 
  | { name: 'dateEnd', alias?: string  } 
  | { name: 'goodExcuse', alias?: string  } 
  | { name: 'reason', alias?: string  } 
  | { name: 'student', alias?: string  } 
  
export interface StudentCreateOneWithoutPresencesInput {
  create?: StudentCreateWithoutPresencesInput | null
  connect?: StudentWhereUniqueInput | null
}
export type StudentCreateOneWithoutPresencesInputInputObject =
  | Extract<keyof StudentCreateOneWithoutPresencesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface StudentCreateWithoutPresencesInput {
  id?: string | null
  firstName?: string
  lastName?: string
  sexe?: prisma.Sexe
  privateEmail?: string | null
  pocoEmail?: string | null
  residencePermit?: string
  birthday?: string
  nationality?: string
  addressStreet?: string
  addressCity?: string
  addressNPA?: number
  addressCanton?: string
  organisation?: string | null
  socialAssistant?: SocialAssistantCreateOneInput | null
  financialParticipation?: prisma.FinancialParticipation
  financialParticipationComment?: string | null
  borrowLaptops?: boolean
  foodCost?: string | null
  batch?: BatchCreateOneInput
}
export type StudentCreateWithoutPresencesInputInputObject =
  | Extract<keyof StudentCreateWithoutPresencesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'sexe', alias?: string  } 
  | { name: 'privateEmail', alias?: string  } 
  | { name: 'pocoEmail', alias?: string  } 
  | { name: 'residencePermit', alias?: string  } 
  | { name: 'birthday', alias?: string  } 
  | { name: 'nationality', alias?: string  } 
  | { name: 'addressStreet', alias?: string  } 
  | { name: 'addressCity', alias?: string  } 
  | { name: 'addressNPA', alias?: string  } 
  | { name: 'addressCanton', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'socialAssistant', alias?: string  } 
  | { name: 'financialParticipation', alias?: string  } 
  | { name: 'financialParticipationComment', alias?: string  } 
  | { name: 'borrowLaptops', alias?: string  } 
  | { name: 'foodCost', alias?: string  } 
  | { name: 'batch', alias?: string  } 
  
export interface PresenceUpdateInput {
  dateStart?: string | null
  dateEnd?: string | null
  goodExcuse?: boolean | null
  reason?: string | null
  student?: StudentUpdateOneRequiredWithoutPresencesInput | null
}
export type PresenceUpdateInputInputObject =
  | Extract<keyof PresenceUpdateInput, string>
  | { name: 'dateStart', alias?: string  } 
  | { name: 'dateEnd', alias?: string  } 
  | { name: 'goodExcuse', alias?: string  } 
  | { name: 'reason', alias?: string  } 
  | { name: 'student', alias?: string  } 
  
export interface StudentUpdateOneRequiredWithoutPresencesInput {
  create?: StudentCreateWithoutPresencesInput | null
  update?: StudentUpdateWithoutPresencesDataInput | null
  upsert?: StudentUpsertWithoutPresencesInput | null
  connect?: StudentWhereUniqueInput | null
}
export type StudentUpdateOneRequiredWithoutPresencesInputInputObject =
  | Extract<keyof StudentUpdateOneRequiredWithoutPresencesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface StudentUpdateWithoutPresencesDataInput {
  firstName?: string | null
  lastName?: string | null
  sexe?: prisma.Sexe | null
  privateEmail?: string | null
  pocoEmail?: string | null
  residencePermit?: string | null
  birthday?: string | null
  nationality?: string | null
  addressStreet?: string | null
  addressCity?: string | null
  addressNPA?: number | null
  addressCanton?: string | null
  organisation?: string | null
  socialAssistant?: SocialAssistantUpdateOneInput | null
  financialParticipation?: prisma.FinancialParticipation | null
  financialParticipationComment?: string | null
  borrowLaptops?: boolean | null
  foodCost?: string | null
  batch?: BatchUpdateOneRequiredInput | null
}
export type StudentUpdateWithoutPresencesDataInputInputObject =
  | Extract<keyof StudentUpdateWithoutPresencesDataInput, string>
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'sexe', alias?: string  } 
  | { name: 'privateEmail', alias?: string  } 
  | { name: 'pocoEmail', alias?: string  } 
  | { name: 'residencePermit', alias?: string  } 
  | { name: 'birthday', alias?: string  } 
  | { name: 'nationality', alias?: string  } 
  | { name: 'addressStreet', alias?: string  } 
  | { name: 'addressCity', alias?: string  } 
  | { name: 'addressNPA', alias?: string  } 
  | { name: 'addressCanton', alias?: string  } 
  | { name: 'organisation', alias?: string  } 
  | { name: 'socialAssistant', alias?: string  } 
  | { name: 'financialParticipation', alias?: string  } 
  | { name: 'financialParticipationComment', alias?: string  } 
  | { name: 'borrowLaptops', alias?: string  } 
  | { name: 'foodCost', alias?: string  } 
  | { name: 'batch', alias?: string  } 
  
export interface StudentUpsertWithoutPresencesInput {
  update?: StudentUpdateWithoutPresencesDataInput
  create?: StudentCreateWithoutPresencesInput
}
export type StudentUpsertWithoutPresencesInputInputObject =
  | Extract<keyof StudentUpsertWithoutPresencesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PresenceUpdateManyMutationInput {
  dateStart?: string | null
  dateEnd?: string | null
  goodExcuse?: boolean | null
  reason?: string | null
}
export type PresenceUpdateManyMutationInputInputObject =
  | Extract<keyof PresenceUpdateManyMutationInput, string>
  | { name: 'dateStart', alias?: string  } 
  | { name: 'dateEnd', alias?: string  } 
  | { name: 'goodExcuse', alias?: string  } 
  | { name: 'reason', alias?: string  } 
  
export interface StudentSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: StudentWhereInput | null
  AND?: StudentSubscriptionWhereInput[]
  OR?: StudentSubscriptionWhereInput[]
  NOT?: StudentSubscriptionWhereInput[]
}
export type StudentSubscriptionWhereInputInputObject =
  | Extract<keyof StudentSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface SocialAssistantSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: SocialAssistantWhereInput | null
  AND?: SocialAssistantSubscriptionWhereInput[]
  OR?: SocialAssistantSubscriptionWhereInput[]
  NOT?: SocialAssistantSubscriptionWhereInput[]
}
export type SocialAssistantSubscriptionWhereInputInputObject =
  | Extract<keyof SocialAssistantSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface BatchSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: BatchWhereInput | null
  AND?: BatchSubscriptionWhereInput[]
  OR?: BatchSubscriptionWhereInput[]
  NOT?: BatchSubscriptionWhereInput[]
}
export type BatchSubscriptionWhereInputInputObject =
  | Extract<keyof BatchSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PresenceSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: PresenceWhereInput | null
  AND?: PresenceSubscriptionWhereInput[]
  OR?: PresenceSubscriptionWhereInput[]
  NOT?: PresenceSubscriptionWhereInput[]
}
export type PresenceSubscriptionWhereInputInputObject =
  | Extract<keyof PresenceSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type SexeValues =
  | 'MALE'
  | 'FEMALE'
  | 'OTHER'
  
export type FinancialParticipationValues =
  | 'YES'
  | 'NO'
  | 'EXTERN'
  | 'OTHER'
  
export type PresenceOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'dateStart_ASC'
  | 'dateStart_DESC'
  | 'dateEnd_ASC'
  | 'dateEnd_DESC'
  | 'goodExcuse_ASC'
  | 'goodExcuse_DESC'
  | 'reason_ASC'
  | 'reason_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type StudentOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'firstName_ASC'
  | 'firstName_DESC'
  | 'lastName_ASC'
  | 'lastName_DESC'
  | 'sexe_ASC'
  | 'sexe_DESC'
  | 'privateEmail_ASC'
  | 'privateEmail_DESC'
  | 'pocoEmail_ASC'
  | 'pocoEmail_DESC'
  | 'residencePermit_ASC'
  | 'residencePermit_DESC'
  | 'birthday_ASC'
  | 'birthday_DESC'
  | 'nationality_ASC'
  | 'nationality_DESC'
  | 'addressStreet_ASC'
  | 'addressStreet_DESC'
  | 'addressCity_ASC'
  | 'addressCity_DESC'
  | 'addressNPA_ASC'
  | 'addressNPA_DESC'
  | 'addressCanton_ASC'
  | 'addressCanton_DESC'
  | 'organisation_ASC'
  | 'organisation_DESC'
  | 'financialParticipation_ASC'
  | 'financialParticipation_DESC'
  | 'financialParticipationComment_ASC'
  | 'financialParticipationComment_DESC'
  | 'borrowLaptops_ASC'
  | 'borrowLaptops_DESC'
  | 'foodCost_ASC'
  | 'foodCost_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type SocialAssistantOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'firstName_ASC'
  | 'firstName_DESC'
  | 'lastName_ASC'
  | 'lastName_DESC'
  | 'phone_ASC'
  | 'phone_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type BatchOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'startingTime_ASC'
  | 'startingTime_DESC'
  | 'endTime_ASC'
  | 'endTime_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  